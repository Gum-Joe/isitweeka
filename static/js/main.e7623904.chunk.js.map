{"version":3,"sources":["gAnalytics.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GA_DISABLE_COOKIE_STR","gaSetState","state","document","cookie","window","API_KEY","App","props","gapiReady","isNotWeekAB","week","apiHasRan","isWeekend","this","loadGoogleAPI","script","createElement","src","async","defer","onload","gapi","load","client","setApiKey","setState","getCalendar","err","console","error","message","body","appendChild","d","dhere","Date","day","getDay","diff","getDate","setDate","log","inputDate","weekStart","getMonday","setUTCHours","weekEnd","dayNow","startTime","toISOString","endTime","calendarId","userTimeZone","init","calendar","events","list","timeMax","response","result","items","eventsToday","filter","entry","summary","length","theEvent","href","className","getStatus","Navbar","fixed","enableDeclineButton","declineButtonText","onAccept","location","reload","onDecline","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e7623904.chunk.js","sourcesContent":["// Set to the same value as the web property used on the site\nexport const GA_PROPERTY = \"G-X4VMSWGN74\";\n\n// Disable tracking if the opt-out cookie exists.\nexport const GA_DISABLE_COOKIE_STR = \"ga-disable-\" + GA_PROPERTY;\n/*if (document.cookie.indexOf(disableStr + '=true') > -1) {\n\t// @ts-ignore\n\twindow[disableStr] = true;\n}*/\n\n// Opt-out function\n/** Use true to opt out */\nexport default function gaSetState(state: boolean): void {\n\tdocument.cookie = GA_DISABLE_COOKIE_STR + `=${state ? \"true\" : \"false\"}; expires=Thu, 31 Dec 2099 23:59:59 UTC; path=/`;\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\twindow[GA_DISABLE_COOKIE_STR] = state;\n}","import React, { Component } from \"react\";\nimport gaSetState, { GA_DISABLE_COOKIE_STR, GA_PROPERTY } from \"./gAnalytics\";\nimport \"./App.css\";\nimport CookieConsent from \"react-cookie-consent\";\nimport { Navbar } from \"react-bootstrap\";\n\n/*function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}*/\n\n/**\n * YES I KNOW THIS IS A BAD IDEA!!!!!!\n * But it's more convient \n * And i've limited it's use\n * And it's only for access to a public read-only\n */\nconst API_KEY = \"AIzaSyBJtspfBiYYXzpF3Nc32owjtjnJbRToxK4\";\n\ninterface TheState {\n  /** Used to see whether the API has been loaded */\n  gapiReady: boolean;\n  /** Set to true if neither Week A or B is detected */\n  isNotWeekAB: boolean;\n  week: \"A\" | \"B\" | \"unknown\";\n  /** Tells page when API has ran  (i.e. page loaded) */\n  apiHasRan: boolean;\n  isWeekend: boolean;\n}\n\nclass App extends Component<Record<string, never>, TheState> {\n\n\tconstructor(props: Record<string, never>) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tgapiReady: false,\n\t\t\tisNotWeekAB: false,\n\t\t\tweek: \"unknown\",\n\t\t\tapiHasRan : false,\n\t\t\tisWeekend: false,\n\t\t};\n\t}\n\n\tcomponentDidMount(): void {\n\t\tthis.loadGoogleAPI();\n\t}\n\n\t/**\n   * Loads the Google API, then runs {@link getCalendar}\n   */\n\tloadGoogleAPI() {\n\t\tconst script = document.createElement(\"script\");\n\t\tscript.src = \"https://apis.google.com/js/client.js\";\n\t\tscript.async = true;\n\t\tscript.defer = true;\n\n\t\tscript.onload = () => {\n\t\t\twindow.gapi.load(\"client\", () => {\n\t\t\t\twindow.gapi.client.setApiKey(API_KEY);\n\t\t\t\twindow.gapi.client.load(\"calendar\", \"v3\", () => {\n\t\t\t\t\tthis.setState({ gapiReady: true });\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.getCalendar();\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.error(\"Error: \" + err?.message);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\n\t\tdocument.body.appendChild(script);\n\t}\n\n\t/**\n   * Gets the monday from a week\n   * From https://stackoverflow.com/questions/4156434/javascript-get-the-first-day-of-the-week-from-current-date\n   */\n\tgetMonday(d: Date) {\n\t\tconst dhere = new Date(d);\n\t\tconst day = dhere.getDay();\n\t\t// Sunday is day 0\n\t\t// Sat is Day 6\n\t\t// If Sun or Sat go to next week\n\t\t/**\n     * What this does is:\n     * - Take the current date\n     * - Subtract the day of the week, taking us to the previous Sunday\n     * - Go forward one to monday\n     * - BUT if the current date is a Saturday, add 8 instead as we want 2 days after that Saturday (the next week), not the previous Monday\n     */\n\t\tconst diff = dhere.getDate() - day + (day === 6 ? 8 : 1); // adjust when day is saturday -> add 6 to bring us back to Saturday, then add 2 to go to Monday\n\t\treturn new Date(dhere.setDate(diff));\n\t}\n\n\t/**\n   * Loads the KECHB calendar, finds the current week, then goes to the Monday of that week and checks for a Week A or Week B event.\n   */\n\tasync getCalendar() {\n\n\t\tconst a = \"QA\";\n\t\tconsole.log(a);\n\t\tconst inputDate = new Date();\n\t\t// Used for fiddling:\n\t\t// inputDate.setDate(2);\n\t\t// inputDate.setMonth(0);\n\t\t// inputDate.setFullYear(2021);\n\t\tconst weekStart = this.getMonday(inputDate);\n\t\tweekStart.setUTCHours(0, 0, 0, 0); // Set to start of day\n\t\tconst weekEnd = new Date(weekStart);\n\t\tweekEnd.setDate(weekEnd.getDate() + 1);\n\t\tweekEnd.setUTCHours(0, 0, 0, 0); // Set to start of day\n\n\t\t// Tell us if weekend!\n\t\tconst dayNow = inputDate.getDay();\n\t\tif (dayNow === 6 || dayNow === 0) { // 0 is Sunday, 6 is Saturday\n\t\t\tthis.setState({\n\t\t\t\tisWeekend: true,\n\t\t\t});\n\t\t} \n\n\n\t\tconst startTime = weekStart.toISOString();\n\t\tconst endTime = weekEnd.toISOString();\n    \n\t\t// The \"Calendar ID\" from your calendar settings page, \"Calendar Integration\" secion:\n\t\tconst calendarId = \"calendar@camphillboys.bham.sch.uk\";\n\n\t\t// 1. Create a project using google's wizzard: https://console.developers.google.com/start/api?id=calendar\n\t\t// 2. Create credentials:\n\t\t//    a) Go to https://console.cloud.google.com/apis/credentials\n\t\t//    b) Create Credentials / API key\n\t\t//    c) Since your key will be called from any of your users' browsers, set \"Application restrictions\" to \"None\",\n\t\t//       leave \"Website restrictions\" blank; you may optionally set \"API restrictions\" to \"Google Calendar API\"\n    \n\t\t// You can get a list of time zones from here: http://www.timezoneconverter.com/cgi-bin/zonehelp\n\t\tconst userTimeZone = \"Europe/London\";\n\n\t\t// Initializes the client with the API key and the Translate API.\n\t\tawait window.gapi.client.init({\n\t\t\t\"apiKey\": API_KEY,\n\t\t\t// Discovery docs docs: https://developers.google.com/api-client-library/javascript/features/discovery\n\t\t\t\"discoveryDocs\": [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"],\n\t\t});\n\t\tconst response = await gapi.client.calendar.events.list({\n\t\t\t\"calendarId\": calendarId,\n\t\t\t\"timeZone\": userTimeZone,\n\t\t\t\"singleEvents\": true,\n\t\t\t\"timeMin\": (new Date(startTime)).toISOString(),\n\t\t\ttimeMax: (new Date(endTime)).toISOString(),\n\t\t\t\"maxResults\": 20,\n\t\t\t\"orderBy\": \"startTime\"\n\t\t});\n\t\tif (response.result.items) {\n\t\t\tconst calendarRows = [\"<table class=\\\"wellness-calendar\\\"><tbody>\"];\n\t\t\t// Filter events to those that are \"Week A\" or \"Week B\"\n\t\t\tconst eventsToday = response.result.items.filter(entry => entry.summary === \"Week A\" || entry.summary === \"Week B\");\n\t\t\tif (eventsToday.length === 0) {\n\t\t\t\t// Neithe detected.  Probably Hols.\n\t\t\t\tthis.setState({\n\t\t\t\t\tisNotWeekAB: true,\n\t\t\t\t\tweek: \"unknown\",\n\t\t\t\t\tapiHasRan: true,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst theEvent = eventsToday[0];\n\t\t\t\tswitch (theEvent.summary) {\n\t\t\t\tcase \"Week A\":\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tweek: \"A\",\n\t\t\t\t\t\tapiHasRan: true,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Week B\":\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tweek: \"B\",\n\t\t\t\t\t\tapiHasRan: true,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// NEITHER!\n\t\t\t\t\t// Something went wrong\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisNotWeekAB: true,\n\t\t\t\t\t\tapiHasRan: true,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgetStatus() {\n\t\tif (this.state.isNotWeekAB || this.state.week === \"unknown\") {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<h2>It is neither Week A or B.</h2>\n\t\t\t\t\t<h3>This means it's probably a holiday.</h3>\n\t\t\t\t\t<h4>If you believe this is in error, please email <a href=\"mailto:info@isitweeka.com\">info@isitweeka.com</a></h4>\n\t\t\t\t</>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<h2>{this.state.isWeekend ? \"Next week will be\" : \"It is\"}</h2> {/* Special case for weekend, where we show next week*/}\n\t\t\t\t\t<h1>Week {this.state.week}</h1>\n\t\t\t\t\t<h4>More coming soon...</h4>\n\t\t\t\t</>\n\t\t\t);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"isitweeka\">\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.apiHasRan ? this.getStatus() : ( <h2>Loading...</h2> )\n\t\t\t\t\t}\n\t\t\t\t\t{/*<h2>It is</h2>\n          <h1>Week A/B</h1>\n          <h3>More coming soon</h3>\n          <h2>isitweeka.com</h2>\n          <h1>IT BEGINS.</h1>\n          <h3>More coming soon</h3>*/}\n\t\t\t\t</div>\n\n\t\t\t\t{/* Cookie consent */}\n\t\t\t\t<Navbar fixed=\"bottom\">\n\t\t\t\t\t<CookieConsent\n\t\t\t\t\t\tenableDeclineButton\n\t\t\t\t\t\tdeclineButtonText=\"No thanks\"\n\t\t\t\t\t\tonAccept={\n\t\t\t\t\t\t\t() => { gaSetState(false); window.location.reload(); }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonDecline={\n\t\t\t\t\t\t\t() => { gaSetState(true); window.location.reload(); }\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n            This website uses cookies (via Google Analytics) for analytics.\n\t\t\t\t\t\t<a href={process.env.PUBLIC_URL + \"/privacy.html\"}>View Privacy Policy</a>\n\t\t\t\t\t</CookieConsent>\n\t\t\t\t</Navbar>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}